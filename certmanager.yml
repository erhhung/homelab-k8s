# https://cert-manager.io/docs
# https://cert-manager.io/docs/installation/helm
# https://cert-manager.io/docs/configuration/issuers
---
- name: Install Certificate Manager
  tags: install
  hosts: &hosts
    - "{{ k3s_control_plane_host }}"
    - "{{ rke_control_plane_host }}"
  gather_facts: false
  vars_files: &vars_files
    - vars/kubernetes.yml
    - vars/monitoring.yml
    - vars/certmanager.yml
  vars: &vars
    # required kubernetes>=24.2 package only in user virtualenv
    ansible_python_interpreter: "{{ venv_python_interpreter }}"
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ternary_filter.html
    cluster: "{{ (inventory_hostname == k3s_control_plane_host) | ternary('k3s','rke') }}"
    kubeconfig: "{{ vars[cluster ~'_kubeconfig'] }}"
  pre_tasks:
    - name: Is the monitoring stack ready?
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/monitoring/stackready.yml
      when: monitoring_stack_ready is not defined
  tasks:
    - name: Install cert-manager Helm chart
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig }}"
        chart_repo_url: https://charts.jetstack.io
        chart_ref: cert-manager
        chart_version: "{{ certmanager_chart_version }}"
        release_name: "{{ certmanager_release_name }}"
        release_namespace: "{{ certmanager_namespace }}"
        create_namespace: true
        release_values: "{{ certmanager_chart_values }}"
        history_max: "{{ helm_max_history }}"
        atomic: true
        wait: true
  any_errors_fatal: true

# https://cert-manager.io/docs/reference/cmctl#manual-installation
# TIP: to force a renewal: cmctl renew -n <namespace> <certificate>
- name: Install cert-manager CLI tool
  tags: cli
  hosts: k8s_all
  gather_facts: false
  become: true
  tasks:
    - name: Install cert-manager CLI tool
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
      ansible.builtin.shell: |
        set -o pipefail

        REL="https://github.com/cert-manager/cmctl/releases/latest"
        VER=$(curl -Is $REL | sed -En 's/^location:.+\/tag\/(.+)\r$/\1/p')

        # check if latest version already installed
        command -v cmctl &> /dev/null && {
          ver=($(cmctl version --client --short))
          [ "${ver[-1]}" == "$VER" ] && exit 9 # no change
        }
        ARCH=$(uname -m | sed -e 's/aarch64/arm64/' \
                              -e  's/x86_64/amd64/')
        curl -fsSL "$REL/download/cmctl_linux_$ARCH.tar.gz" | \
          tar -xz -C /usr/local/bin --no-same-owner cmctl
      args:
        executable: /bin/bash
      register: install_cli
      changed_when: install_cli.rc == 0
      failed_when: install_cli.rc not in [0,9]
  any_errors_fatal: true

# https://smallstep.com/docs/certificate-manager/kubernetes-step-issuer
# https://github.com/smallstep/step-issuer
- name: Configure Step CA as ClusterIssuer
  tags: issuer
  hosts: *hosts
  gather_facts: false
  vars_files: *vars_files
  vars: *vars
  pre_tasks:
    - name: Gather facts about controller
      ansible.builtin.include_tasks: tasks/localfacts.yml
      when: local_python_interpreter is not defined

    - name: Get CA certificates from PKI
      ansible.builtin.include_tasks: tasks/pki/cacerts.yml
      when: ca_certificates is not defined

    - name: Get Step CA provisioner info
      delegate_to: localhost
      run_once: true
      block:
        - name: Fetch Step CA provisioners
          vars:
            ansible_python_interpreter: "{{ local_python_interpreter }}"
          # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html
          ansible.builtin.uri:
            url: "{{ step_ca_url }}/provisioners"
          register: step_ca_provisioners

        - name: Set step_ca_provisioner fact
          # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
          ansible.builtin.set_fact:
            step_ca_provisioner: |
              {{ step_ca_provisioners.json.provisioners |
                 selectattr('type', '==', 'JWK')  | first }}
  tasks:
    - name: Create CA provisioner secret
      vars:
        passwordRef: "{{ step_issuer_chart_values.stepClusterIssuer.provisioner.passwordRef }}"
        secret_name: "{{ passwordRef.name }}"
        secret_ns: "{{ step_issuer_namespace }}"
        create_ns: false
        secret_data: "{{ {
          passwordRef.key: step_ca_provisioner_pass
          } }}"
      ansible.builtin.include_tasks: tasks/k8s/secrets/generic.yml

    - name: Install Step Issuer Helm chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig }}"
        chart_repo_url: https://smallstep.github.io/helm-charts
        chart_ref: step-issuer
        chart_version: "{{ step_issuer_chart_version }}"
        release_name: "{{ step_issuer_release_name }}"
        release_namespace: "{{ step_issuer_namespace }}"
        release_values: "{{ step_issuer_chart_values }}"
        history_max: "{{ helm_max_history }}"
        atomic: true
        wait: true
  any_errors_fatal: true
