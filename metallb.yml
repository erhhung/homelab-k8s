# https://metallb.io/
# https://metallb.universe.tf/concepts
# https://metallb.universe.tf/concepts/bgp
---
- name: Install MetalLB on RKE cluster
  hosts: "{{ rke_control_plane_host }}"
  gather_facts: false
  vars_files:
    - vars/kubernetes.yml
    - vars/monitoring.yml
    - vars/metallb.yml
  vars:
    # required kubernetes>=24.2 package only in user virtualenv
    ansible_python_interpreter: "{{ venv_python_interpreter }}"
    kubeconfig: "{{ rke_kubeconfig }}"
    secret_ns: "{{ metallb_namespace }}"
    release: "{{ metallb_release_name }}"
  pre_tasks:
    - name: Is the monitoring stack ready?
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/monitoring/stackready.yml
      when: monitoring_stack_ready is not defined
  tasks:
    - name: Create MetalLB speaker secret
      vars:
        secret_name: "{{ metallb_secrets['speaker'] }}"
        secret_data:
          # metallb_secret: {vault.yml}
          # key must be "secretkey" due
          # to bug in Bitnami Helm chart:
          # https://github.com/bitnami/charts/issues/36271
          secretkey: "{{ metallb_secret }}"
      ansible.builtin.include_tasks: tasks/k8s/secrets/generic.yml

    - name: Install MetalLB Helm chart
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig }}"
        chart_repo_url: https://charts.bitnami.com/bitnami
        chart_ref: metallb
        chart_version: "{{ metallb_chart_version }}"
        release_name: "{{ metallb_release_name }}"
        release_namespace: "{{ metallb_namespace }}"
        release_values: "{{ metallb_chart_values }}"
        history_max: "{{ helm_max_history }}"
        atomic: true
        wait: true
      timeout: 300

    - name: Create MetalLB config CRs
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/k8s_module.html
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        namespace: "{{ metallb_namespace }}"
        definition: "{{ item }}"
        state: present
      loop: "{{ metallb_config_crs }}"
      loop_control:
        label: "{{ item.kind }}"
  any_errors_fatal: true
