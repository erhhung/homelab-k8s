# https://argo-cd.readthedocs.io/en/stable/getting_started/
# https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/
---
- name: Install Argo CD on RKE cluster
  tags: install
  hosts: "{{ rke_control_plane_host }}"
  vars_files:
    - vars/kubernetes.yml
    - vars/monitoring.yml
    - vars/valkey.yml
    - vars/argocd.yml
  vars:
    kubeconfig: "{{ rke_kubeconfig }}"
    secret_ns: "{{ argocd_namespace }}"
    release: "{{ argocd_release_name }}"
  pre_tasks:
    - name: Is the monitoring stack ready?
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/monitoring/stackready.yml
      when: monitoring_stack_ready is not defined
  tasks:
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/tls/#tls-certificates-used-by-argocd-server
    - name: Create Argo CD ingress secret
      vars:
        secret_name: "{{ argocd_secrets['server'] }}"
        cert_name: argocd-server-ingress
        sans:
          - argocd
          - "{{ argocd_fqdn }}"
          - "*.{{ argocd_namespace }}.svc.{{ cluster_domain }}"
          - "*.{{ argocd_namespace }}.svc"
      ansible.builtin.include_tasks: tasks/k8s/secrets/tls.step.yml

    - name: Create Valkey password secret
      vars:
        secret_name: "{{ argocd_secrets['valkey'] }}"
        secret_data:
          redis-password: "{{ valkey_pass }}"
        create_ns: false
      ansible.builtin.include_tasks: tasks/k8s/secrets/generic.yml

    # https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd
    - name: Install Argo CD Helm chart
      vars:
        # required kubernetes>=24.2 package only in user virtualenv
        ansible_python_interpreter: "{{ venv_python_interpreter }}"
      # https://docs.ansible.com/ansible/latest/collections/kubernetes/core/helm_module.html
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig }}"
        chart_repo_url: https://argoproj.github.io/argo-helm
        chart_ref: argo-cd
        chart_version: "{{ argocd_chart_version }}"
        release_name: "{{ argocd_release_name }}"
        release_namespace: "{{ argocd_namespace }}"
        release_values: "{{ argocd_chart_values }}"
        history_max: "{{ helm_max_history }}"
        atomic: true
        wait: true
      timeout: 300

    - name: >-
        {{ 'Enable' if enabled else 'Disable' }}
        Istio service mesh
      vars:
        enabled: "{{ argocd_use_mesh }}"
        apps_ns: "{{ argocd_namespace }}"
        services:
          - argocd-server
          - argocd-applicationset-controller
          - argocd-commit-server
          - argocd-repo-server
        resources: |
          {% set res = [] %}
          {% for svc in services %}
          {%  set _ = res.append({
                'kind':'Service',
                'name': svc
              }) %}
          {% endfor %}
          {{ res }}
      ansible.builtin.include_tasks: tasks/istio/mesh.yml
  any_errors_fatal: true
