# build Docker image on the controller
# host and push to our Harbor registry
# at harbor.fourteeners.local/library/
#
# pass the following vars:
#   context_dir <required> Docker context dir
#   dockerfile  [optional] default=Dockerfile
#   image_name  <required> base image name
#   image_tag   [optional] default=latest
#   platforms   [optional] default=[ARCH]
---
- name: Gather facts about controller
  # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
  ansible.builtin.include_tasks: tasks/localfacts.yml
  when: local_python_interpreter is not defined

- name: Build and push Docker image
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ local_python_interpreter }}"
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/basename_filter.html
    local_name: "{{ image_name | ansible.builtin.basename }}:{{ image_tag | default('latest') }}"
    local_image: "{{ local_name | regex_replace(':latest$','') }}"
    remote_name: "{{ harbor_container_registry }}/library/{{ local_name }}"
    remote_image: "{{ remote_name | regex_replace(':latest$','') }}"
  block:
    - name: Build Docker image "{{ local_image }}"
      # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_image_build_module.html
      community.docker.docker_image_build:
        platform: "{{ platforms | default([local_machine_arch]) |
          map('ansible.builtin.regex_replace', '^', 'linux/') }}"
        dockerfile: "{{ dockerfile | default(omit) }}"
        path: "{{ playbook_dir ~'/'~ context_dir }}"
        name: "{{ local_name }}"
        # no idempotency
        rebuild: always
        pull: true

    - name: Tag image "{{ local_image }}" for Habor
      # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_image_tag_module.html
      community.docker.docker_image_tag:
        name: "{{ local_name }}"
        repository: "{{ remote_name }}"
      register: tag_image
      changed_when: false

    - name: Log into Harbor registry as "{{ harbor_admin_user }}"
      # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_login_module.html
      community.docker.docker_login:
        registry_url: https://{{ harbor_container_registry }}
        username: "{{ harbor_admin_user }}"
        password: "{{ harbor_admin_pass }}"

    - name: Push "{{ remote_image }}"
      # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_image_push_module.html
      community.docker.docker_image_push:
        name: "{{ remote_name }}"
      timeout: 600
  always:
    - name: Untag "{{ remote_image }}"
      # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_image_remove_module.html
      community.docker.docker_image_remove:
        name: "{{ remote_name }}"
      when: tag_image is defined
      changed_when: false
  any_errors_fatal: true
