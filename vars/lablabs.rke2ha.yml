# https://github.com/lablabs/ansible-role-rke2#role-variables

# these vars are included to supplement lablabs.rke2.yml
# only if rke_ha_mode = true (defined in kubernetes.yml)

rke2_ha_mode: "{{ rke_ha_mode }}" # HA control plane
rke2_ha_mode_keepalived: false # disable Keepalived
rke2_ha_mode_kubevip: true # install kube-vip LB+vIP

# https://github.com/kube-vip/kube-vip/pkgs/container/kube-vip
rke2_kubevip_image: ghcr.io/kube-vip/kube-vip:v1.0.0
# https://github.com/kube-vip/kube-vip-cloud-provider/pkgs/container/kube-vip-cloud-provider
rke2_kubevip_cloud_provider_image: ghcr.io/kube-vip/kube-vip-cloud-provider:v0.0.12

# don't enable kube-vip cloud provider because
# it watches LoadBalancer Services and injects
# IP address into .spec.loadBalancerIP, which
# conflicts with MetalLB annotation
rke2_kubevip_cloud_provider_enable: false

# NOTE: quoted boolean strings templated
# as literal environment variable values
rke2_kubevip_ipvs_lb_enable: "true" # HA control plane
rke2_kubevip_service_election_enable: "true"

# don't use kube-vip to watch LoadBalancer Services
# as MetalLB will take over that role; kube-vip will
# only provide virtual IP, mapping to active/standby
# control plane nodes, for Kubernetes API access:
# https://kube-vip.io/docs/usage/kubernetes-services
rke2_kubevip_svc_enable: "false" # watch LoadBalancer?

rke2_api_ip: "{{ hostvars[rke_cluster_name].ansible_host }}"
rke2_api_cidr: 32
rke2_loadbalancer_ip_range:
  # one IP only for kube-vip
  range-global: "{{ rke2_api_ip }}/{{ rke2_api_cidr }}"
rke2_interface: "{{ host_pif }}"
