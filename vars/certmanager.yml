certmanager_namespace: cert-manager

# https://github.com/cert-manager/cert-manager/tree/master/deploy/charts/cert-manager
certmanager_chart_version: "1.18.2"
certmanager_release_name: cert-manager

# https://github.com/cert-manager/cert-manager/tree/master/deploy/charts/cert-manager/values.yaml
certmanager_chart_values:
  crds:
    enabled: true
    # let Helm delete the CRDs when uninstalling
    # (this will cause the GC to also delete all
    # CRs, like Certificates & Issuers, but they
    # can be recreated by our playbook)
    keep: false

  # controller
  replicaCount: 1
  resources: &resources
    requests:
      cpu: 10m
      memory: 32Mi

  webhook:
    replicaCount: 1
    resources: *resources
    serviceType: ClusterIP
    securePort: 10250

  cainjector:
    enabled: true
    replicaCount: 1
    resources:
      requests:
        cpu: 10m
        memory: 64Mi

  # create Helm post-install hook Job that waits
  # for the webhook endpoint to become available
  startupapicheck:
    enabled: true
    timeout: 1m

  prometheus:
    enabled: true
    servicemonitor:
      enabled: "{{ prometheus_crds_installed }}"
      labels:
        release: "{{ monitoring_release_name }}"
      # targetPort value before chart
      # version 1.18.x must be number
      targetPort: 9402 # http-metrics
      path: /metrics
      interval: 60s

# step_ca_provisioner_pass: {vault.yml}
step_ca_url: https://pki.fourteeners.local

# deploy into cert-manager namespace
step_issuer_namespace: cert-manager

step_issuer_secrets:
  provisioners: step-ca-provisioners

# https://github.com/smallstep/helm-charts/tree/master/step-issuer
step_issuer_chart_version: "1.9.8"
step_issuer_release_name: step-issuer

# https://github.com/smallstep/helm-charts/tree/master/step-issuer/values.yaml
step_issuer_chart_values:
  replicaCount: 1

  resources:
    requests:
      cpu: 20m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 128Mi

  service:
    port: 8443
    targetPorts: https
    scrapePort: 8443
    scrape: false

  serviceAccount:
    create: true

  certManager:
    serviceAccount:
      name: "{{ certmanager_release_name }}"
      namespace: "{{ certmanager_namespace }}"

  # https://github.com/smallstep/step-issuer#3-configure-step-issuer
  stepClusterIssuer:
    create: true

    caUrl: "{{ step_ca_url }}"
    caBundle: "{{ ca_certificates[1] | b64encode }}"
    provisioner:
      name: "{{ step_ca_provisioner.name }}"
      kid: "{{ step_ca_provisioner.key.kid }}"
      passwordRef:
        name: "{{ step_issuer_secrets['provisioners'] }}"
        namespace: "{{ step_issuer_namespace }}"
        key: jwk-provisioner-password
