eso_namespace: external-secrets

# https://github.com/external-secrets/external-secrets/tree/main/deploy/charts/external-secrets
eso_chart_version: "0.20.2"
eso_release_name: external-secrets

# https://github.com/external-secrets/external-secrets/tree/main/deploy/charts/external-secrets/values.yaml
eso_chart_values:
  createOperator: true
  enableHTTP2: true

  log: &log-config
    level: info # trace|debug|info|warn|error
    timeEncoding: rfc3339 # epoch|iso8601|rfc3339|rfc3339nano|millis|nanos

  replicaCount: 1
  revisionHistoryLimit: 2
  # ensure only one instance
  # operates at a time in HA
  leaderElect: false

  installCRDs: true
  crds:
    # https://external-secrets.io/latest/guides/disable-cluster-features
    createClusterSecretStore: true
    createClusterExternalSecret: true
    createClusterGenerator: true
    createClusterPushSecret: true

  # enable/disable reconcilers:
  # https://external-secrets.io/latest/guides/security-best-practices#3-selectively-disable-reconciliation-of-cluster-wide-resources
  processClusterStore: true
  processClusterExternalSecret: true
  processClusterGenerator: true
  processClusterPushSecret: true

  # https://external-secrets.io/latest/guides/security-best-practices#role-based-access-control-rbac
  # https://external-secrets.io/latest/guides/security-best-practices#4-implement-namespace-scoped-installation
  scopedNamespace: ""
  # set to true if using scopedNamespace
  # (this will disable cluster-wide CRDs)
  scopedRBAC: false

  # concurrent reconciles
  concurrent: 1

  resources: &resources
    requests:
      cpu: 10m
      memory: 64Mi

  metrics:
    listen:
      secure:
        # don't enable TLS because Helm chart has
        # no support for serviceMonitor.tlsConfig
        enabled: false

  serviceMonitor:
    # ServiceMonitor CRD should already be installed by monitoring stack
    renderMode: failIfMissing # skipIfMissing|failIfMissing|alwaysRender
    enabled: true
    interval: 30s
    additionalLabels: &smon-labels
      release: "{{ monitoring_release_name }}"

  # create Grafana dashboard from ConfigMap
  grafanaDashboard:
    enabled: true
    extraLabels: *smon-labels
    sidecarLabel: "{{ grafana_dashboard_label }}"
    sidecarLabelValue: "1"

  webhook: &webhook
    create: true
    replicaCount: 1
    revisionHistoryLimit: 2
    resources: *resources
    log: *log-config

  # use the same BASIC config as
  # admission webhook controller
  certController: *webhook

  extraObjects:
    # create ClusterSecretStore for Vault:
    # https://external-secrets.io/latest/provider/hashicorp-vault#kubernetes-authentication
    # https://external-secrets.io/latest/api/clustersecretstore
    - apiVersion: external-secrets.io/v1
      kind: ClusterSecretStore
      metadata:
        name: vault
      spec:
        provider:
          vault:
            server: "{{ vault_service_url }}"
            caProvider:
              type: Secret
              name: "{{ vault_secrets['node-tls'] }}"
              namespace: "{{ vault_namespace }}"
              key: ca.crt
            version: v2 # KV secrets engine v2
            path: "{{ vault_kv_mounts['prod'] }}"
            auth:
              kubernetes:
                mountPath: kubernetes # under auth/
                # see vault_roles in vars/vault.yml
                role: eso
                serviceAccountRef:
                  name: "{{ eso_release_name }}"
                  namespace: "{{ eso_namespace }}"
                  audiences: ["vault"]
