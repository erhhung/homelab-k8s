# kibana_os_pass: {vault.yml}

kibana_namespace: opensearch
kibana_host_name: kibana # alias of "homelab"

# remember to add kibana.fourteeners.local to pfSense DNS
# as an alias of homelab.fourteeners.local: 192.168.0.221
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#products
kibana_fqdn: "{{ [kibana_host_name] | product(search_domains) | map('join','.') | first }}"

kibana_api_url: https://{{ kibana_fqdn }}/api

kibana_secrets:
  ingress: dashboards-ingress-tls

# https://github.com/opensearch-project/helm-charts/tree/main/charts/opensearch-dashboards
dashboards_chart_version: "2.31.0"
dashboards_release_name: opensearch-dashboards

# https://github.com/opensearch-project/helm-charts/tree/main/charts/opensearch-dashboards/values.yaml
dashboards_chart_values:
  opensearchHosts: "{{ opensearch_service_url }}"

  # opensearchAccount:
  #   secret: "{{ opensearch_secrets['passwords'] }}"
  extraEnvs:
    - name: OPENSEARCH_USERNAME
      value: kibana
    - name: OPENSEARCH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "{{ opensearch_secrets['passwords'] }}"
          key: kibana

  config:
    # https://github.com/opensearch-project/OpenSearch-Dashboards/tree/main/config/opensearch_dashboards.yml
    opensearch_dashboards.yml: |
      {% raw -%}
      server:
        name: dashboards
        host: "{{ .Values.serverHost }}"
      {% endraw %}
        # NOTE: ssl is under server level, not at
        # top level as values.yaml seem to suggest
        ssl:
          enabled: true
          certificate: /tls/tls.crt
          key: /tls/tls.key
      opensearch:
        ssl: &ssl_cas
          certificateAuthorities:
            - /tls/ca.crt
      data_source:
        ssl: *ssl_cas

  secretMounts:
    - name: ingress-tls
      secretName: "{{ kibana_secrets['ingress'] }}"
      path: /tls

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

  ingress:
    enabled: true
    tls:
      - secretName: "{{ kibana_secrets['ingress'] }}"
        hosts: "{{ [kibana_fqdn] }}"
    ingressClassName: "{{ rke_ingress_class }}"
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    hosts:
      - host: "{{ kibana_fqdn }}"
        paths:
          - path: /
            pathType: Prefix
            backend:
              servicePort: http

  plugins:
    enabled: true
    # https://docs.opensearch.org/docs/latest/install-and-configure/install-dashboards/plugins/#available-plugins
    installList: []
      # - dashboards-observability

  serviceMonitor:
    # OpenSearch Dashboards doesn't appear to emit metrics
    # (unless there's a plugin that hasn't been obvious to
    # find)!  Even though a ServiceMonitor is created, and
    # Prometheus will try to scrape metrics port 9601, the
    # pod doesn't actually expose nor even listen on 9601!
    enabled: "{{ prometheus_crds_installed and false }}"
    labels:
      release: "{{ monitoring_release_name }}"
    path: /_prometheus/metrics

# apply custom settings available on
# old: Dashboards Management => Advanced settings or
# new: Settings and setup => Application settings page:
# POST https://kibana.fourteeners.local/api/opensearch-dashboards/settings
kibana_admin_settings:
  "theme:darkMode": true
  "home:useNewHomePage": true
  "savedObjects:perPage": 50
