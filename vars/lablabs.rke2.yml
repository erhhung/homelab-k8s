# https://github.com/lablabs/ansible-role-rke2#role-variables

rke2_cluster_group_name: cluster
rke2_servers_group_name: "{{ rke_control_plane_group }}"
rke2_agents_group_name: "{{ rke_workers_group }}"

# https://github.com/rancher/rke2/releases
rke2_version: v1.32.7+rke2r1
rke2_architecture: amd64

# rke2_token: {vault.yml}

rke2_cluster_domain: cluster.local # don't change default!
# remember to add homelab.fourteeners.local to pfSense DNS!
rke2_additional_sans: |
  {% set cp_hosts = groups[rke_control_plane_group] %}
  {# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/extract_filter.html #}
  {% set cp_addrs = cp_hosts | map('ansible.builtin.extract', hostvars, 'ansible_host') %}
  {{ [ rke_cluster_name,
       rke_fqdns,
       cp_hosts,
       cp_addrs,
     ] | flatten }}

# default CIDR ranges in RKE2
# for pod and service networks
rke2_cluster_cidr: ["10.42.0.0/16"]
rke2_service_cidr: ["10.43.0.0/16"]

# additional RKE2 server configuration options
# https://docs.rke2.io/reference/server_config
# - "option: value"
rke2_server_options:
  - "write-kubeconfig-mode: 0644"
  # enable Prometheus scraping
  - "etcd-expose-metrics: true"
  - |-
    etcd-arg:
      - listen-metrics-urls=http://127.0.0.1:2381,http://{{ hostvars[inventory_hostname].ansible_host }}:2381
  # https://docs.rke2.io/advanced#control-plane-component-resource-requestslimits
  - |-
    control-plane-resource-requests:
      - kube-apiserver-cpu=250m
      - kube-apiserver-memory=2Gi

# additional RKE2 agent configuration options
# https://docs.rke2.io/reference/linux_agent_config
rke2_agent_options: []
# - "option: value"

rke2_server_node_taints: [] # allow control plane to run workloads
# - CriticalAddonsOnly=true:NoExecute # workloads on workers only
rke2_agent_node_taints: []

rke2_kube_apiserver_args: []
# enable Prometheus scraping
# TIP: shell into any pod and run
# the "kube-*" binary with --help
rke2_kube_controller_manager_arg:
  - bind-address=0.0.0.0
rke2_kube_scheduler_arg:
  - bind-address=0.0.0.0
rke2_kube_proxy_arg:
  - nodeport-addresses=primary
  - metrics-bind-address=0.0.0.0:10249

# wait for all pods to be have a status of running or
# succeeded after rke2-server service rolling restart
rke2_wait_for_all_pods_to_be_ready: true
