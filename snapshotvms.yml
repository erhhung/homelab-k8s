---
- name: Create/revert/delete VM snapshots
  hosts: "{{ xcp_master }}"
  gather_facts: false
  vars_files:
    - vars/xcp.yml
  vars:
    # To be overridden on command-line:
    # ansible-playbook snapshotvms.yml
    #   [-e targets=rancher,cluster]
    #   [-e do=create|revert|delete]
    #   [-e '{"date":"2025-02-01"}']
    #   [-e '{"desc":"snapshot 1"}']
    targets: rancher,cluster
    do: create
    date: ""
    desc: ""
  pre_tasks:
    - name: Validate input vars
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html
      ansible.builtin.assert:
        that:
          - do in ['create','revert','delete']
          # if create, provide desc but not date
          - do != 'create' or desc != '' and date == ''
          # if revert, provide desc, date optional
          - do != 'revert' or desc != ''
          # if delete, provide both date and desc
          - do != 'delete' or date != '' and desc != ''
        fail_msg: |-
          Invalid input vars!
          do: [create]|revert|delete
          "create": [desc]
          "revert": <desc>, [date]
          "delete": <date>, <desc>
        quiet: true

    - name: Get controller facts
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_tasks_module.html
      ansible.builtin.include_tasks: tasks/localfacts.yml
      # registers local_tz_offset.in_seconds and .in_hours
      when: local_tz_offset is not defined

    - name: Resolve target hosts
      vars:
        target_hosts: "{{ targets }}"
      ansible.builtin.include_tasks: tasks/hosts/resolve.yml
      # sets resolved_hosts fact

    - name: Get snapshots JSON
      # cannot use ansible.builtin.shell because XCP-ng 8.3 only has Python 3.6,
      # which requires an older version of Ansible that we don't otherwise need
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/raw_module.html
      ansible.builtin.raw: |
        # run Bash to load .bashrc in order to
        # use exported functions and variables
        exec /bin/bash -l <<'EOT'
        set -o pipefail

        _snapshots --delim='|' | jq -nRSMc '[
          inputs | split("|") as $a | [
            {date: $a[0]},
            {ssid: $a[1]},
            {vmid: $a[2]} | select(.vmid | tostring | startswith("00000000-") | not),
            {host: $a[3]} | select(.host != "_NA_"),
            {desc: $a[4]} | select(.desc != "")
          ] | add
        ]'
        EOT
      when: do in ['revert','delete']
      register: jq_output
      changed_when: false

    # - name: Show snapshots JSON
    #   # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
    #   ansible.builtin.debug:
    #     msg: "JSON: {{ jq_output.stdout }}"
    #   when: jq_output.stdout is defined

    - name: Parse snapshots JSON
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html
      # https://runebook.dev/en/articles/jinja/templates/index/jinja-filters.selectattr
      # https://runebook.dev/en/articles/jinja/templates/index/jinja-filters.sort
      ansible.builtin.set_fact:
        # Ansible sort is stable,
        # so sort by date first
        snapshots: >
          {{ jq_output.stdout |  from_json |
             selectattr('date', 'defined') |
             selectattr('host', 'defined') |
             sort(attribute='date', reverse=true) |
             sort(attribute='host') }}
      when: jq_output.stdout is defined

    # - name: Show snapshot list
    #   ansible.builtin.debug:
    #     var: snapshots
    #   when: snapshots is defined

    - name: Filter snapshot list
      vars:
        date_regex: ^{{ date | regex_escape if do == 'delete' else '.' }}
        desc_regex: "{{ desc | regex_escape }}"
      ansible.builtin.set_fact:
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/to_datetime_filter.html
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/strftime_filter.html
        # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/search_test.html
        filtered: |
          {% set filtered = [] %}
          {% for s in snapshots | default([]) %}
          {#   # if > 1 snapshot matches per host, select most recent one #}
          {%   if filtered | selectattr('host', '==', s.host) | length == 0 %}
          {%     set secs = (s.date | to_datetime('%Y-%m-%dT%H:%M:%SZ')).timestamp() %}
          {%     set time = '%Y-%m-%d %I:%M %p' | strftime(secs + tz_offset.in_seconds) %}
          {%     if s.host in    resolved_hosts  and
                      time is search(date_regex) and
                    s.desc is search(desc_regex, ignorecase=true) %}
          {%       set _ = filtered.append({
                     'host': s.host,
                     'date':   time,
                     'desc': s.desc,
                     'uuid': s.ssid,
                   }) %}
          {%     endif %}
          {%   endif %}
          {% endfor %}
          {{ filtered }}

    # - name: Show filtered list
    #   ansible.builtin.debug:
    #     var: filtered
  tasks:
    - name: Do {{ do }} snapshots
      ansible.builtin.raw: |
        # run Bash to load .bashrc in order to
        # use exported functions and variables
        exec /bin/bash -l <<'EOT'

        uuid_var="UUID_{{ item | upper }}"
        name_var="NAME_{{ item | upper }}"
        uuid="${!uuid_var}"
        name="${!name_var}"

        xe vm-snapshot uuid=$uuid \
                       new-name-label="[Ansible snapshots playbook] $name" \
                       new-name-description={{ desc | quote }}
        EOT
      loop: "{{ resolved_hosts }}"
      when: do == 'create' and resolved_hosts | length > 0
      changed_when: true

    - name: Revert or delete snapshots
      when: do != 'create' and filtered | length > 0
      block:
        - name: Show snapshots to {{ do }}
          ansible.builtin.debug:
            msg: |-
              {% set  max_len = filtered | map(attribute='host') | map('length') | max -%}
              {% set host_fmt = '%-' ~ max_len ~ 's' -%}
              {% for s in filtered -%}
              {{   host_fmt % s.host }}  {{ s.date }}  {{ s.desc }}
              {% endfor %}

        - name: Prompt for confirmation
          # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/pause_module.html
          ansible.builtin.pause:
            # https://tedboy.github.io/jinja2/templ14.html#capitalize
            prompt: "{{ do | capitalize }} snapshots? (y/n)"
          register: confirm

        - name: Do {{ do }} snapshots
          ansible.builtin.raw: |
            case {{ do }} in
              revert) xe snapshot-revert  uuid={{ item.uuid }} ;;
              delete) xe snapshot-destroy uuid={{ item.uuid }} ;;
            esac
          loop: "{{ filtered }}"
          loop_control:
            label: "{{ item.uuid }}|{{ item.host }}"
          when: confirm.user_input | lower == 'y'
          changed_when: true
  any_errors_fatal: true
