# save rendered config as /var/lib/rancher/rke2/server/manifests/rke2-ingress-nginx-passthrough-config.yaml
# however, chart won't be installed until corresponding HelmChart exists by
# copying /var/lib/rancher/rke2/server/manifests/rke2-ingress-nginx.yaml to
# rke2-ingress-nginx-passthrough.yaml and changing the .metadata.name value
---
# https://docs.rke2.io/networking/networking_services#nginx-ingress-controller
# https://github.com/kubernetes/ingress-nginx/tree/main/charts/ingress-nginx/values.yaml
# https://github.com/rancher/rke2-charts/tree/main-source/packages/rke2-ingress-nginx/generated-changes/patch/values.yaml.patch
# https://support.tools/rke2-ingress-nginx

{% set chart_name = 'rke2-ingress-nginx-passthrough' -%}

apiVersion: helm.cattle.io/v1
kind: HelmChartConfig
metadata:
  name: {{ chart_name }}
  namespace: kube-system
spec:
  valuesContent: |-
    nameOverride: {{ chart_name }}
    global:
      systemDefaultIngressClass: {{ rke_ingress_class }}

    controller:
      ingressClass: {{ rke_ingress_pt_class }}
      ingressClassResource:
        name: {{ rke_ingress_pt_class }}
        enabled: true
        default: false
        controllerValue: k8s.io/ingress-{{ rke_ingress_pt_class }}
      watchIngressWithoutClass: false
      ingressClassByName: true

      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap
      config:
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#log-format-upstream
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/log-format
        # https://nginx.org/en/docs/varindex.html
        log-format-escape-json: "true"
        log-format-upstream: >-
          {"time_ms": $msec, "remote_addr": "$remote_addr",
          "user_agent": "$http_user_agent", "host": "$http_host",
          "port": "$server_port", "method": "$request_method", "uri": "$request_uri",
          "protocol": "$server_protocol", "tls": "$ssl_protocol", "status": $status,
          "request_time": $request_time, "request_length": $request_length,
          "body_bytes_sent": $body_bytes_sent, "bytes_sent": $bytes_sent,
          "upstream_addr": "$upstream_addr",
          "upstream_connect_time": $upstream_connect_time,
          "upstream_response_time": $upstream_response_time}

        # Nginx will proxy requests to port 443 on
        # each host to port 442 via PROXY protocol:
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#use-proxy-protocol
        use-proxy-protocol: "true"
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-real-ip-cidr
        proxy-real-ip-cidr: 127.0.0.1/32

        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-read-timeout
        proxy-read-timeout: "600"
        proxy-send-timeout: "600"
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-body-size
        proxy-body-size: 5m

        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#client-body-buffer-size
        client-body-buffer-size: 256k
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-request-buffering
        proxy-request-buffering: "off"
        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-buffering
        proxy-buffering: "off"

        # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap#proxy-next-upstream
        proxy-next-upstream: "off"
        proxy-next-upstream-tries: "1"

      # https://kubernetes.github.io/ingress-nginx/user-guide/cli-arguments
      extraArgs:
        default-ssl-certificate: kube-system/{{ nginx_tls_secret }}

        # don't listen on 80 because SSL redirect is not possible:
        # https://github.com/kubernetes/ingress-nginx/issues/14030
        http-port: 8180

        # --enable-ssl-passthrough allows the vCluster
        # ingress controller to generate and serve the
        # proper certificate for Kubernetes API server:
        # https://www.vcluster.com/docs/vcluster/manage/accessing-vcluster#expose-vcluster
        enable-ssl-passthrough: ""

      resources:
        requests:
          cpu: 10m
          memory: 128Mi

      hostPort:
        enabled: false
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet

      service:
        # chart default value is enabled, but RKE2 patched
        # it to disabled--we want the LoadBalancer service
        # enabled so that MetalLB can assign it virtual IP
        enabled: true

        # HTTP port is not usable because use-proxy-protocol
        # for SSL passthrough requires PROXY request headers
        enableHttp: false
        enableHttps: true

        annotations:
          # replaces deprecated .spec.loadBalancerIP field
          metallb.universe.tf/loadBalancerIPs: "{{ metallb_vips['ingress-pt'] }}"

        # prevent kube-proxy from re-spraying traffic to all
        # nodes since pfSense is already doing that via ECMP
        externalTrafficPolicy: Local
